{"version":3,"sources":["App.js","CalcDisplay.js","Keypad.js","serviceWorker.js","index.js"],"names":["App","buttonClicked","pressed","clear","backspace","calc","setState","disp","state","slice","eval","e","className","this","React","Component","CalcDisplay","props","Keypad","target","name","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0ea64068.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport CalcDisplay from \"./CalcDisplay.js\";\r\nimport Keypad from \"./Keypad.js\";\r\n\r\nclass App extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdisp: \"\",\r\n\t\t};\r\n\t}\r\n\r\n\tbuttonClicked = pressed => {\r\n\t\tif (pressed === \"AC\") {\r\n\t\t\tthis.clear();\r\n\t\t} else if (pressed === \"DEL\") {\r\n\t\t\tthis.backspace();\r\n\t\t} else if (pressed === \"=\") {\r\n\t\t\tthis.calc();\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdisp: this.state.disp + pressed,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tclear = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisp: \"\",\r\n\t\t});\r\n\t};\r\n\r\n\tbackspace = () => {\r\n\t\tthis.setState({\r\n\t\t\tdisp: this.state.disp.slice(0, -1),\r\n\t\t});\r\n\t};\r\n\r\n\tcalc = () => {\r\n\t\ttry {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdisp: eval(this.state.disp),\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdisp: \"error, press 'AC'\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"outer-container\">\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<div className=\"calc-body\">\r\n\t\t\t\t\t\t<CalcDisplay disp={this.state.disp}></CalcDisplay>\r\n\t\t\t\t\t\t<Keypad buttonClicked={this.buttonClicked}></Keypad>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h1>Kanishk's Calculator</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nclass CalcDisplay extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"display\">\r\n\t\t\t\t<p>{this.props.disp}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CalcDisplay;\r\n","import React from \"react\";\r\n\r\nclass Keypad extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\tbuttonClicked = e => {\r\n\t\tthis.props.buttonClicked(e.target.name);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"keypad\">\r\n\t\t\t\t<button name=\"AC\" onClick={this.buttonClicked}>\r\n\t\t\t\t\tAC\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"(\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t(\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\")\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t)\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"/\" onClick={this.buttonClicked} className=\"operator\">\r\n\t\t\t\t\t/\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"7\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t7\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"8\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t8\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"9\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t9\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"*\" onClick={this.buttonClicked} className=\"operator\">\r\n\t\t\t\t\t*\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"4\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t4\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"5\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t5\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"6\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t6\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"-\" onClick={this.buttonClicked} className=\"operator\">\r\n\t\t\t\t\t-\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"1\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t1\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"2\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t2\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"3\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t3\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"+\" onClick={this.buttonClicked} className=\"operator\">\r\n\t\t\t\t\t+\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\".\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t.\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"0\" onClick={this.buttonClicked}>\r\n\t\t\t\t\t0\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"DEL\" onClick={this.buttonClicked}>\r\n\t\t\t\t\tDEL\r\n\t\t\t\t</button>\r\n\t\t\t\t<button name=\"=\" onClick={this.buttonClicked} className=\"equals\">\r\n\t\t\t\t\t=\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Keypad;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}